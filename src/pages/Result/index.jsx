import React from "react";
import LayoutContent from "../../components/layoutContent";
import "./index.scss";
import {
  FaRocket,
  FaUsers,
  FaChartLine,
  FaRegCheckSquare,
  FaRegFilePdf,
} from "react-icons/fa";
import jsPDF from "jspdf";
import { useNavigate } from "react-router-dom";

const resultData = {
  score: 8.5,
  total: 10,
  correct: 34,
  totalQuestions: 40,
  time: "18:30 ph√∫t",
  suggestions: [
    "L√†m th√™m b√†i t·∫≠p v·ªÅ ƒê·ªãnh lu·∫≠t Newton, C√¥ng th·ª©c l·ª±c ƒëi·ªán v√† chuy·ªÉn ƒë·ªông ƒë·ªÅu.",
    "H·ªá th·ªëng c√≥ th·ªÉ t·∫°o ƒë·ªÅ luy·ªán t∆∞∆°ng t·ª± theo ch·ªß ƒë·ªÅ n√†y.",
  ],
  questions: [
    {
      id: 1,
      question: "ƒê·ªãnh lu·∫≠t Newton th·ª© nh·∫•t n√≥i v·ªÅ ƒëi·ªÅu g√¨?",
      yourAnswer: "M·ªôt v·∫≠t c√≥ kh·ªëi l∆∞·ª£ng l·ªõn s·∫Ω chuy·ªÉn ƒë·ªông nhanh.",
      correctAnswer:
        "M·ªôt v·∫≠t s·∫Ω gi·ªØ nguy√™n tr·∫°ng th√°i n·∫øu kh√¥ng c√≥ l·ª±c t√°c d·ª•ng.",
      analysis:
        "ƒê√¢y l√† ƒë·ªãnh lu·∫≠t qu√°n t√≠nh. B·∫°n n√™n √¥n t·∫≠p l·∫°i ch·ªß ƒë·ªÅ 'C∆° h·ªçc - ƒê·ªãnh lu·∫≠t Newton'.",
      isCorrect: false,
    },
    // Th√™m c√°c c√¢u h·ªèi kh√°c n·∫øu mu·ªën
  ],
};

const handleExportPDF = () => {
  const doc = new jsPDF();
  doc.setFontSize(18);
  doc.text("K·∫øt Qu·∫£ B√†i Thi - PhyGen", 20, 20);
  doc.setFontSize(12);
  doc.text(`ƒêi·ªÉm s·ªë: ${resultData.score} / ${resultData.total}`, 20, 40);
  doc.text(
    `S·ªë c√¢u ƒë√∫ng: ${resultData.correct} / ${resultData.totalQuestions}`,
    20,
    50
  );
  doc.text(`Th·ªùi gian l√†m b√†i: ${resultData.time}`, 20, 60);
  doc.save("ket-qua-phygen.pdf");
};

const ResultContent = () => {
  const navigate = useNavigate();

  const handleSave = () => {
    alert("L∆∞u k·∫øt qu·∫£ th√†nh c√¥ng!");
    navigate("/history");
  };

  return (
    <div className="result">
      <h1 className="title">K·∫øt Qu·∫£ B√†i Thi - PhyGen</h1>
      <div className="stats">
        <div className="stats-card">
          <FaRocket className="stats-icon" />
          <div className="stats-label">ƒêi·ªÉm s·ªë</div>
          <div className="stats-value">
            {resultData.score} / {resultData.total}
          </div>
        </div>
        <div className="stats-card">
          <FaUsers className="stats-icon" />
          <div className="stats-label">S·ªë c√¢u ƒë√∫ng</div>
          <div className="stats-value">
            {resultData.correct} / {resultData.totalQuestions}
          </div>
        </div>
        <div className="stats-card">
          <FaChartLine className="stats-icon" />
          <div className="stats-label">Th·ªùi gian l√†m b√†i</div>
          <div className="stats-value">{resultData.time}</div>
        </div>
      </div>
      <h2 className="section-title">Ph√¢n t√≠ch & Th·ªëng k√™</h2>
      <div className="tip">
        <span role="img" aria-label="bulb">
          üí°
        </span>{" "}
        G·ª£i √Ω luy·ªán t·∫≠p: {resultData.suggestions[0]}
      </div>
      <div className="tip">
        <span role="img" aria-label="system">
          üìù
        </span>{" "}
        H·ªá th·ªëng c√≥ th·ªÉ t·∫°o ƒë·ªÅ luy·ªán t∆∞∆°ng t·ª± theo ch·ªß ƒë·ªÅ n√†y.{" "}
        <a href="#" className="link">
          [L√†m ƒë·ªÅ t∆∞∆°ng t·ª±]
        </a>
      </div>
      <h2 className="section-title">Ph√¢n t√≠ch chi ti·∫øt c√¢u h·ªèi</h2>
      <div className="questions">
        {resultData.questions.map((q) => (
          <div className="question" key={q.id}>
            <div className="question-title">
              C√¢u {q.id}: {q.question}
            </div>
            <div className="question-answer">
              <span className="label">C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n:</span>{" "}
              <span className="incorrect">{q.yourAnswer}</span>
            </div>
            <div className="question-answer">
              <span className="label">ƒê√°p √°n ƒë√∫ng:</span>{" "}
              <span className="correct">{q.correctAnswer}</span>
            </div>
            <div className="question-analysis">{q.analysis}</div>
          </div>
        ))}
      </div>
      <div className="actions">
        <button className="btn btn--primary" onClick={handleSave}>
          <FaRegCheckSquare style={{ marginRight: 8 }} /> L∆∞u k·∫øt qu·∫£
        </button>
        <button className="btn btn--danger" onClick={handleExportPDF}>
          <FaRegFilePdf style={{ marginRight: 8 }} /> T·∫£i file PDF
        </button>
      </div>
    </div>
  );
};

const Result = () => {
  return <LayoutContent layoutType={1} content1={<ResultContent />} />;
};

export default Result;
